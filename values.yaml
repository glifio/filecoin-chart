## METADATA

# Create the lotus statefulset if true.
lotusStsCreate: true

# A dictionary of the statefulset labels. Can be used as a service selector to provide a universal endpoint to the pods.
lotusStsLabels:
  app: lotus-node-app
  release: api-read-master

# The replicas number for the statefulset to create.
lotusStsReplicas: 1

## VOLUME

# Path on the local disk thatâ€™s represented in the container as INFRA_LOTUS_HOME
# If true, the vol-lotus volume is mounted as the  /nvme/disk path from the local disk.
lotusVolume:
  name: vol-lotus
  hostPath:
    enabled: true
    enableSubPath: true
    path: /nvme/disk

#
isArchival: false

## INIT CONTAINERS

#If true, create an InitContainer that creates default folders (for lotus and for snapshots) and sets filesystem permissions.
InitContainerPermissions: true

# Set of parameters to init-container
# If downloadSnapshot.enabled: true, create an InitContainer that downloads the chain snapshot
downloadSnapshot:
  enabled: true
  url: null
  unpack: true
  checkLedger: true
  dependecies:
    aria2: "1.36.0-r1"
    zstd: "1.5.5-r0"

## ENVIRONMENT VARIABLES

lotusEnv:
  # DOCKER SCRIPTS RELATED ENVIRONMENT VARIABLES
  INFRA_LOTUS_DAEMON: "true"
  INFRA_LOTUS_HOME: "/home/lotus_user"
  INFRA_CLEAR_RESTART: "false"
  INFRA_SYNC: "true"
  INFRA_SECRETVOLUME: "true"
  INFRA_PERSISTNODEID: "false"
  INFRA_IMPORT_SNAPSHOT: "false"
  DOWNLOAD_FROM: https://snapshots.mainnet.filops.net/minimal/latest.zst
  SNAPSHOTURL: /home/lotus_user/snapshot/latest.car
  ALLOWED_DELAY: 3
  GOLOG_LOG_FMT: "json"
  # LOTUS RELATED ENVIRONMENT VARIABLES
  LOTUS_FEVM_ENABLEETHRPC: "true"
  LOTUS_FEVM_EVENTS_MAXFILTERHEIGHTRANGE: "60480"
  LOTUS_FEVM_EVENTS_FILTERTTL: "504h0m0s"
  LOTUS_FEVM_ENABLEETHHASHTOFILECOINCIDMAPPING: "true"
  LOTUS_FEVM_ETHTXHASHMAPPINGLIFETIMEDAYS: "0"
  LOTUS_CHAINSTORE_ENABLESPLITSTORE: "false"
  LOTUS_SKIP_APPLY_TS_MESSAGE_CALL_WITH_GAS: "1"
  LOTUS_FVM_CONCURRENCY: 24
  LOTUS_VM_ENABLE_TRACING: "true"


## LOTUS CONTAINER

# Lotus Docker image
lotusContainer:
  image: "glif/lotus:1.20.3-calibnet-arm-custom"
  imagePullPolicy: Always
  command: ["/etc/lotus/docker/run"]
  preStopCommand: ["/bin/sh", "-c", "rm -f $INFRA_LOTUS_HOME/.lotus/sync-complete"]


livenessProbe:
  enabled: true
  initialDelaySeconds: 600
  periodSeconds: 20
  successThreshold: 1
  timeoutSeconds: 20

readinessProbe:
  enabled: true
  command: ["healthcheck"]
  initialDelaySeconds: 600
  periodSeconds: 60
  successThreshold: 1
  timeoutSeconds: 3

startupProbe:
  enabled: true
  failureThreshold: 1000
  periodSeconds: 200
  successThreshold: 1
  timeoutSeconds: 10

# Constraints for scheduling pods to nodes
nodeSelector: {}

### volumeClaimTemplates:

# lotusVolumeSize is a volume size of lotus
lotusVolumeSize: "50Gi"
# the volume can be mounted as read-write by a single node.
# ReadWriteOnce access mode can allow multiple pods to access the volume when the pods are running on the same node.
lotusVolumeAccessModes:
- ReadWriteOnce
#Amazon EBS provides the volume type for our storage
lotusVolumeStorageClass: "ebs-sc-gp2"


## SERVICE

# Create the Lotus service if true.
createLotusService: true

# Set of the specify annotations
lotusServiceAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "1234"
  prometheus.io/path: "/debug/metrics"

enableLotusP2pPort: false

lotusP2pPort: 1235



## CACHE

# createCache indecates if cache deployment has to be created
createCache: false
# cacheImageRepository is a repository to pull cache image from
cacheImageRepository: "protofire/filecoin-rpc-proxy:0.0.3"
# cacheDeploymentReplicas indicates how many replicas should be in the deployment
cacheDeploymentReplicas: 2

# cacheRequestsCpu is the amount of CPU cache pod requests on schedule
cacheRequestsCpu: 500m
# cacheRequestsMemory is the amount of memory cache pod requests on schedule
cacheRequestsMemory: 1Gi

# cacheCpuLimit is the amount of CPU cache pod is limited to
cacheCpuLimit: 3000m
# cacheMemoryLimit is the amount of memory cache pod is limited to
cacheMemoryLimit: 3Gi

useCustomServiceSelector: false
customServiceSelector: {}

useLotusConfigMap: false
