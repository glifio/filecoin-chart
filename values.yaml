# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

nodeSelector:
  enabled: true
  nodeSelectorKey: nodeGroupName
  nodeSelectorValue: noGroup

image:
  repository: glif/lotus:1.18.0-rc3-calibnet
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use. Will be prefixed with release name
  name: acc

SecurityContext:
  runAsNonRoot: true
  runAsUser: 2000
  runAsGroup: 2000
  fsGroup: 2000

## cache service settings
cache:
  enabled: false
  image: protofire/filecoin-rpc-proxy:0.0.3
  replicas: 2


init:
  importSnapshot:
    enabled: false
  import:
    enabled: false
    # ideally a shared volume containing chain dump
    volume: {}
      #- name: filecoin-chain-vol
      #  persistentVolumeClaim:
      #    claimName: efs-claim

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  lotus:
    requests:
      cpu: 500m
      memory: 3Gi
    limits:
      cpu: 1900m
      memory: 5Gi
  ipfs:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 3000m
      memory: 3Gi

persistence:
  # If persistence is set to false no persistent volumes will be created
  enabled: true
  hostPath: /nvme/disk
  # autoResizer:
  #   enabled: true
  #   increaseThreshold: 90 # in %
  #   increaseStep: 10 # in %
  #   cron: "0 0 * * *"
  snapshots:
    # If uploadToIpfs is set to true the internal Lotus snapshot will be created and uploaded to the IPFS system. Note that IPFS must be nenabled in that case
    uploadToIpfs:
      enabled: false
      export: hot
      # shedPeriod: 6h
      shareToGist:
        enabled: false
        cron: "0 0 * * *"
        #address: https://gist.github.com/openworklabbot/d03393d1f6e70e089e9e8d18922474f6
        #authorEmail:
        #authorName: Protofire Bot
    # If snapshots are enabled - the PV will be deployed with ebs-sc class unless custom class is specified
    enabled: true
    # If automation is enabled - several CronJobs will be created to create snapshots and/or delete old snapshots automatically.
    automation:
      deletion:
        cron: "0 1 * * *"
        enabled: true
        retention:
          count: 2
      creation:
        cron: "0 0 * * *"
        enabled: true
    # If restore is enabled the snapshot name must be specified. Charts will attempt to find the existing snapshot with this name and create a PV from that snapshot.
    restore:
      enabled: false
      #name: snapshot-blah
  # For each of the deployed services one can specify the disk size, custom disk type and access mode.
  lotus:
    size: "50Gi"
    accessModes:
      - ReadWriteOnce
    storageClassName: "ebs-sc-gp2"
    lotusVolumeName: "vol-lotus"
  ipfs:
    size: "16Gi"
    accessModes:
      - ReadWriteOnce
    storageClassName: "ebs-sc-gp2"

# Defines whether should be deployed Lotus node with service, gateway or without.
Lotus:
  statefulset:
    enabled: true
  enabled: true
  env:
    # default env vars needed by every lotus pod
    default:
      # var needed to start `lotus daemon`
      INFRA_LOTUS_DAEMON: "true"
      # home folder for the Lotus user
      INFRA_LOTUS_HOME: "/home/lotus_user"
      # var for wiping Lotus home folder
      # CAUTION: should be disabled for archive/on-demand nodes
      INFRA_CLEAR_RESTART: "false"
      # var to start `lotus sync wait` in the Lotus container
      INFRA_SYNC: "true"
      # variable to enable reuse token across installations of Lotus
      INFRA_SECRETVOLUME: "true"
      # variable for healthcheck script, threshold for block delay
      # Link to script: https://github.com/glifio/filecoin-docker/blob/master/scripts/healthcheck
      ALLOWED_DELAY: 3
      # Add persistent node which will be shared after any session, nodeid should be placed into lotus-secret
      INFRA_PERSISTNODEID: "false"
    custom:
    # custom envvars on lotus pod is used if u need to something non-trivial,
    #   e.x. set some Lotus binary/container env vars
    # Possible values:
      # variable to enable 2346 port and gateway service
      # INFRA_LOTUS_GATEWAY: "false"
      # Maximum heap size that the memory watchdog will try to respect.
      # Link: https://github.com/raulk/go-watchdog
      # LOTUS_MAX_HEAP: "false"
      # Var needed by StateCall operation for simulation of future messages to FIL blockchain
      # Links:
      #  * https://lotus.filecoin.io/reference/lotus/state/#statecall - StateCall description
      #  * https://github.com/filecoin-project/lotus/issues/9046 - the root of requirement
      # LOTUS_VM_ENABLE_TRACING: "false"
      {}
  service:
    enabled: true
    is_slave: false
    label: some-release
    annotations:
      # default annotations are used for every lotus service
      default:
        prometheus.io/scrape: "true"
        prometheus.io/port: "1234"
        prometheus.io/path: /debug/metrics
      # custom annotations on service used if u need to something non-trivial, e.x. set custom timeout on the service
      custom:
        {}
# Defines remote endpoint for services(StateDiff e.t.c.)
#lotusDNS: some-service

# Defines whether IPFS should be deployed with Lotus node.
IPFS:
  enabled: false

StateDiff:
  enabled: false

tolerations: []

podAntiAffinity:
  enabled: false
