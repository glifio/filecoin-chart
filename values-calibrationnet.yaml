# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: glif/lotus:v1.10.0-rc6-calibnet
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use. Will be prefixed with release name
  name: acc

SecurityContext:
  runAsNonRoot: true
  runAsUser: 2000
  runAsGroup: 2000
  fsGroup: 2000

## cashe service settings
cache:
  enabled: false
  image: protofire/filecoin-rpc-proxy:0.0.3
  replicas: 2
  nodeSelector:
    nodeLabel:
      role: worker

ingress:
  enabled: true
  host: dev.node.glif.io
  annotations:
    nginx.ingress.kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Length,Content-Range,Range"
    nginx.ingress.kubernetes.io/enable-rewrite-log: "true"
    # nginx.ingress.kubernetes.io/server-alias: "_"
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      SecRuleEngine On
      SecDebugLog /tmp/modsec_debug.log
  lotus:
    enabled: true
    gateway: false
    # Uncomment following annotations to change access mode from JWT-based to Firewall-based. Also replace <JWT> with admin JWT token of the node and 1.2.3.4/32 to your IP address.
    #annotations:
    # nginx.ingress.kubernetes.io/whitelist-source-range: 1.2.3.4/32
    # nginx.ingress.kubernetes.io/configuration-snippet: |
    #       proxy_set_header Authorization "Bearer <JWT>";
  ipfs:
    enabled: false
  powergate:
    enabled: false
  statediff:
    enabled: false

init:
  sync:
    enabled: true
  importSnapshot:
    enabled: false
  clearRestart:
    enabled: false
  import:
    enabled: false
    # ideally a shared volume containing chain dump
    volume: {}
      #- name: filecoin-chain-vol
      #  persistentVolumeClaim:
      #    claimName: efs-claim

secretVolume:
  enabled: true
  persistNodeID: false

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  lotus:
    requests:
      cpu: 500m
      memory: 3Gi
    limits:
      cpu: 1900m
      memory: 5Gi
  ipfs:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 3000m
      memory: 3Gi
  powergate:
    requests:
      cpu: 1000m
      memory: 2Gi
    limits:
      cpu: 2000m
      memory: 3Gi
  statediff:
    requests:
      cpu: 100m
      memory: 200Mi
    limits:
      cpu: 250m
      memory: 400Mi

persistence:
  # If persistence is set to false no persistent volumes will be created
  enabled: true
  hostPath: /nvme/disk
  autoResizer:
    enabled: true
    increaseThreshold: 90 # in %
    increaseStep: 10 # in %
    cron: "0 0 * * *"
  snapshots:
    # If uploadToIpfs is set to true the internal Lotus snapshot will be created and uploaded to the IPFS system. Note that IPFS must be nenabled in that case
    uploadToIpfs:
      enabled: false
      export: hot
      # shedPeriod: 6h
      shareToGist:
        enabled: false
        cron: "0 0 * * *"
        #address: https://gist.github.com/openworklabbot/d03393d1f6e70e089e9e8d18922474f6
        #authorEmail:
        #authorName: Protofire Bot
    # If snapshots are enabled - the PV will be deployed with ebs-sc class unless custom class is specified
    enabled: true
    # If automation is enabled - several CronJobs will be created to create snapshots and/or delete old snapshots automatically.
    automation:
      deletion:
        cron: "0 1 * * *"
        enabled: true
        retention:
          count: 2
      creation:
        cron: "0 0 * * *"
        enabled: true
    # If restore is enabled the snapshot name must be specified. Charts will attempt to find the existing snapshot with this name and create a PV from that snapshot.
    restore:
      enabled: false
      #name: snapshot-blah
  # For each of the deployed services one can specify the disk size, custom disk type and access mode.
  lotus:
    size: "35Gi"
    accessModes:
      - ReadWriteOnce
  ipfs:
    size: "10Gi"
    accessModes:
      - ReadWriteOnce
  powergate:
    size: "10Gi"
    accessModes:
      - ReadWriteOnce

# Defines whether should be deployed Lotus node with service, gateway or without.
Lotus:
  enabled: true
  maxheapsize: false
  service:
    enabled: true
    release: some-release
    slave: false
    gateway: false

# Defines remote endpoint for services(StateDiff e.t.c.)
#lotusDNS: some-service

# Defines whether Powergate should be deployed with Lotus node. Note that IPFS must be enabled if Powergate is enabled.
Powergate:
  enabled: false

# Defines whether IPFS should be deployed with Lotus node.
IPFS:
  enabled: false

StateDiff:
  enabled: false

nodeSelector:
  enabled: true
  nodeLabel:
    role: worker

tolerations: []

podAntiAffinity:
  enabled: false

healthcheck:
  enabled: true
  readinessProbe: true
  network: calibration
