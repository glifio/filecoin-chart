version: 2.1
parameters:
  cluster-name:
    type: string
    default: "dev"
  helm-version:
    type: string
    default: "v3.5.3"
  namespace:
    type: string
    default: "nerpanet"
orbs:
  eks: circleci/aws-eks@1.0.3
  helm: circleci/helm@1.2.0
jobs:
  install-helm-chart:
    docker:
      - image: cimg/base:stable
    steps:
      - eks/update-kubeconfig-with-authenticator:
          cluster-name: << pipeline.parameters.cluster-name >>
          install-kubectl: true
      - helm/install-helm-client:
          version: << pipeline.parameters.helm-version >>
      - run:
          command: rm ~/project/get_helm.sh
      - checkout
      - run:
          name: install-helm-chart
          command: |
            export RELEASE=test
            echo "${RELEASE}" | tee /tmp/release
            helm install $RELEASE . -n << pipeline.parameters.namespace >> -f values-<< pipeline.parameters.namespace >>.yaml -f values/<< pipeline.parameters.cluster-name >>/<< pipeline.parameters.namespace >>/test.yaml
      - persist_to_workspace:
          root: /tmp
          paths:
            - release
  test-1-is-up:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: /tmp/releases/
      - eks/update-kubeconfig-with-authenticator:
          cluster-name: << pipeline.parameters.cluster-name >>
          install-kubectl: true
      - helm/install-helm-client:
          version: << pipeline.parameters.helm-version >>
      - run:
          command: rm ~/project/get_helm.sh
      - checkout
      - run:
          name: install-test
          command: |
            export RELEASE="$(cat /tmp/releases/release)"
            echo "Release=${RELEASE}"
            helm template $RELEASE tests/is-up -n << pipeline.parameters.namespace >> -f values-<< pipeline.parameters.namespace >>.yaml -f values/<< pipeline.parameters.cluster-name >>/<< pipeline.parameters.namespace >>/test.yaml | kubectl apply -f - -n << pipeline.parameters.namespace >>
      - run:
          name: verify-test
          command: |
            export RELEASE="$(cat /tmp/releases/release)"
            while true; do
            export STATUS=$(kubectl get pods ${RELEASE}-is-up --no-headers -o custom-columns=":status.phase" -n << pipeline.parameters.namespace >>)
            echo "STATUS IS => $STATUS"
            if [ "$STATUS" == "Pending" ]; then
              sleep 10s
            elif [ "$STATUS" == "Running" ]; then
              sleep 10s
            else
              echo  "$STATUS"
              if [ "$STATUS" == "Succeeded" ]; then
                break
              else
                false
                break
              fi
            fi
            done
      - run:
          name: delete-test
          command: |
            export RELEASE="$(cat /tmp/releases/release)"
            kubectl -n << pipeline.parameters.namespace >> delete pods ${RELEASE}-is-up

  test-2-internally-available:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: /tmp/releases/
      - eks/update-kubeconfig-with-authenticator:
          cluster-name: << pipeline.parameters.cluster-name >>
          install-kubectl: true
      - helm/install-helm-client:
          version: << pipeline.parameters.helm-version >>
      - run:
          command: rm ~/project/get_helm.sh
      - checkout
      - run:
          name: install-available-internally
          command: |
            export RELEASE="$(cat /tmp/releases/release)"
            echo "Release=${RELEASE}"
            helm template $RELEASE tests/available-internally -n << pipeline.parameters.namespace >> -f values-<< pipeline.parameters.namespace >>.yaml -f values/<< pipeline.parameters.cluster-name >>/<< pipeline.parameters.namespace >>/test.yaml | kubectl apply -f - -n << pipeline.parameters.namespace >>
      - run:
          name: check-available-internally
          command: |
            sleep 10
            export RELEASE="$(cat /tmp/releases/release)"
            while true; do
            STATUSCODE=$(kubectl logs ${RELEASE}-available-internally  -n << pipeline.parameters.namespace >>)
            echo "STATUS_CODE IS => $STATUSCODE"
            if [ "$STATUSCODE" != "200" ]; then
              sleep 10s
            else
              echo  "$STATUSCODE"
              if [ "$STATUSCODE" == "200" ]; then
                break
              else
                false
                break
              fi
            fi
            done
          no_output_timeout: 1.5h
      - run:
          name: delete-available-internally
          command: |
            export RELEASE="$(cat /tmp/releases/release)"
            kubectl -n << pipeline.parameters.namespace >> delete pods ${RELEASE}-available-internally
  test-3-externally-available:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: /tmp/releases/
      - eks/update-kubeconfig-with-authenticator:
          cluster-name: << pipeline.parameters.cluster-name >>
          install-kubectl: true
      - helm/install-helm-client:
          version: << pipeline.parameters.helm-version >>
      - run:
          command: rm ~/project/get_helm.sh
      - checkout
      - run:
          name: install-externally-internally
          command: |
            export RELEASE="$(cat /tmp/releases/release)"
            echo "Release=${RELEASE}"
            helm template $RELEASE tests/available-externally -n << pipeline.parameters.namespace >> -f values-<< pipeline.parameters.namespace >>.yaml -f values/<< pipeline.parameters.cluster-name >>/<< pipeline.parameters.namespace >>/test.yaml | kubectl apply -f - -n << pipeline.parameters.namespace >>
      - run:
          name: check-available-externally
          command: |
            sleep 10
            export RELEASE="$(cat /tmp/releases/release)"
            while true; do
            STATUSCODE=$(kubectl logs ${RELEASE}-available-externally  -n << pipeline.parameters.namespace >>)
            echo "STATUS_CODE IS => $STATUSCODE"
            if [ "$STATUSCODE" != "200" ]; then
              sleep 10s
            else
              echo  "$STATUSCODE"
              if [ "$STATUSCODE" == "200" ]; then
                break
              else
                false
                break
              fi
            fi
            done
      - run:
          name: delete-available-externally
          command: |
            export RELEASE="$(cat /tmp/releases/release)"
            kubectl -n << pipeline.parameters.namespace >> delete pods ${RELEASE}-available-externally
  delete-helm-chart:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: /tmp/releases/
      - eks/update-kubeconfig-with-authenticator:
          cluster-name: << pipeline.parameters.cluster-name >>
          install-kubectl: true
      - helm/install-helm-client:
          version: << pipeline.parameters.helm-version >>
      - run:
          command: rm ~/project/get_helm.sh
      - checkout
      - run:
          name: delete-helm-chart
          command: |
            export RELEASE="$(cat /tmp/releases/release)"
            helm delete $RELEASE -n << pipeline.parameters.namespace >>
workflows:
  tests:
    jobs:
      - install-helm-chart:
      - test-1-is-up:
          requires:
            - install-helm-chart
      - test-2-internally-available:
          requires:
            - install-helm-chart
            - test-1-is-up
      - test-3-externally-available:
          requires:
            - install-helm-chart
            - test-1-is-up
            - test-2-internally-available
      - delete-helm-chart:
          requires:
            - test-3-externally-available
